var searchIndex = JSON.parse('{\
"wasmedge_sys":{"doc":"Rust WasmEdge bindings","t":[3,4,4,3,13,3,3,13,13,4,13,13,13,13,3,3,13,3,13,3,6,13,13,3,3,3,3,3,3,13,3,4,13,13,13,13,13,13,13,13,4,3,3,3,13,3,13,4,3,13,3,13,6,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,13,13,13,4,4,4,4,4,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,4,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,4,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,3,3,3,3,3,3,3,3,0,0,0,0,0,3,3,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,4,13,13,13,4,13,13,13,13,13,13,4,13,13,13,4,13,13,13,13,13,13,13,13,4,13,13,4,13,13,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5],"n":["Compiler","CompilerOptimizationLevel","CompilerOutputFormat","Config","Const","Executor","Export","ExternRef","ExternRef","ExternalType","F32","F64","FuncRef","FuncRef","FuncType","Function","Function","Global","Global","GlobalType","HostFunc","I32","I64","Import","ImportObject","Instance","Loader","MemType","Memory","Memory","Module","Mutability","Native","None","O0","O1","O2","O3","Os","Oz","RefType","Statistics","Store","Table","Table","TableType","V128","ValType","Validator","Var","Vm","Wasm","WasmEdgeResult","WasmValue","active_module","add_func","add_global","add_memory","add_table","annotations","annotations_enabled","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bulk_memory_operations","bulk_memory_operations_enabled","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compile","contains_func","contains_func_name","contains_mod_name","contains_mod_name","contains_reg_func","contains_reg_func_name","copy_from","cost_in_total","count_instructions","create","create","create","create","create","create","create","create","create","create_wasi","create_wasmedge_process","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dump_ir","dump_ir_enabled","eq","eq","eq","eq","eq","eq","error","exception_handling","exception_handling_enabled","exit_code","find_func","find_func_registered","find_global","find_global_registered","find_memory","find_memory_registered","find_table","find_table_registered","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_buffer","from_file","func_len","func_names","function_iter","function_list_len","function_references","function_references_enabled","generic_binary","generic_binary_enabled","get_aot_compiler_output_format","get_aot_optimization_level","get_function_type","get_max_memory_pages","get_registered_function_type","global_len","global_names","init_wasi","init_wasmedge_process","instance","instantiate","instr_count","instr_per_sec","interruptible","interruptible_enabled","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_cost_measuring","is_instruction_counting","is_time_measuring","load_wasm_from_buffer","load_wasm_from_file","load_wasm_from_module","measure_cost","measure_time","mem_len","mem_names","memory64","memory64_enabled","module","multi_value","multi_value_enabled","mutable_globals","mutable_globals_enabled","name","named_module","non_trap_conversions","non_trap_conversions_enabled","reference_types","reference_types_enabled","reg_func_len","reg_func_names","reg_global_len","reg_global_names","reg_mem_len","reg_mem_names","reg_module_len","reg_module_names","reg_table_len","reg_table_names","register_active_module","register_import_object","register_named_module","register_wasm_from_buffer","register_wasm_from_file","register_wasm_from_import","register_wasm_from_module","reset","run_func","run_func_registered","run_function","run_registered_function","run_wasm_from_buffer","run_wasm_from_file","run_wasm_from_module","set_aot_compiler_output_format","set_aot_optimization_level","set_cost_limit","set_cost_table","set_max_memory_pages","sign_extension_operators","sign_extension_operators_enabled","simd","simd_enabled","statistics_mut","store_mut","table_len","table_names","tail_call","tail_call_enabled","threads","threads_enabled","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","types","utils","validate","validate","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wasi","wasi_enabled","wasi_import_module_mut","wasmedge_process","wasmedge_process_enabled","wasmedge_process_import_module_mut","AOTDisabled","Common","CompilerCreate","ConfigCreate","ConstExprRequired","ConstPtr","Core","CoreCommonError","CoreError","CoreExecutionError","CoreInstantiationError","CoreLoadError","CoreValidationError","CostLimitExceeded","Create","Create","Create","Create","Create","Create","CreateBinding","DataCountRequired","DataSegDoesNotFit","DivideByZero","DupExportName","DuplicateImportObject","ElemSegDoesNotFit","Execution","ExecutionFailed","ExecutorCreate","ExpectedZeroByte","Export","ExportError","FoundNulByte","Func","FuncError","FuncNotFound","FuncType","FuncType","FuncTypeCreate","FuncTypeMismatch","Global","GlobalError","GlobalType","GlobalType","GlobalTypeCreate","IllegalGrammar","IllegalOpCode","IllegalPath","ImmutableGlobal","Import","ImportError","ImportObjCreate","IncompatibleDataCount","IncompatibleFuncCode","IncompatibleImportType","IndirectCallTypeMismatch","Instance","InstanceError","Instantiation","InstrTypeMismatch","IntegerOverflow","IntegerTooLarge","IntegerTooLong","Interrupted","InvalidAlignment","InvalidConvToInt","InvalidDataIdx","InvalidElemIdx","InvalidFuncIdx","InvalidFuncTypeIdx","InvalidGlobalIdx","InvalidLabelIdx","InvalidLaneIdx","InvalidLimit","InvalidLocalIdx","InvalidMemPages","InvalidMemoryIdx","InvalidMut","InvalidRefIdx","InvalidResultArity","InvalidStartFunc","InvalidTableIdx","JunkSection","Load","LoaderCreate","MalformedElemType","MalformedExportKind","MalformedImportKind","MalformedMagic","MalformedRefType","MalformedSection","MalformedUTF8","MalformedValType","MalformedVersion","Mem","MemError","MemType","MemType","MemTypeCreate","MemoryOutOfBounds","ModifyConst","ModuleCreate","ModuleNameConflict","MultiMemories","MultiTables","MutPtr","NameSizeOutOfBounds","NotFoundActiveModule","NotFoundExecutor","NotFoundFunc","NotFoundFunc","NotFoundFuncRegistered","NotFoundFuncType","NotFoundGlobal","NotFoundGlobal","NotFoundGlobalRegistered","NotFoundImportObject","NotFoundLoader","NotFoundMem","NotFoundMem","NotFoundMemRegistered","NotFoundModule","NotFoundNulByte","NotFoundStatistics","NotFoundStore","NotFoundTable","NotFoundTable","NotFoundTableRegistered","NotFoundValidator","NotFoundWasiImportObjectModule","NotFoundWasmEdgeProcessImportObjectModule","Ptr2Ref","ReadError","RefTypeMismatch","RuntimeError","SectionSizeMismatch","StatisticsCreate","Store","StoreError","Table","TableError","TableOutOfBounds","TableType","TableType","TableTypeCreate","TooManyLocals","Type","Type","Type","Type","Type","Type","TypeCheckFailed","UndefinedElement","UnexpectedEnd","UninitializedElement","UnknownImport","UnmatchedValType","Unreachable","Utf8","Validation","ValidatorCreate","Vm","VmError","WasmEdgeError","WrongInstanceAddress","WrongInstanceIndex","WrongVMWorkflow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","ne","ne","ne","ne","ne","ne","ne","ne","source","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","0","0","0","0","0","0","0","0","actual","expected","0","0","0","0","0","actual","expected","0","0","0","0","0","0","0","0","0","func_name","global_name","mem_name","mod_name","mod_name","mod_name","mod_name","table_name","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","FuncType","Function","Global","GlobalType","Instance","MemType","Memory","Table","TableType","function","global","memory","module","table","FuncType","Function","create","create","mod_name","name","params_len","params_type_iter","returns_len","returns_type_iter","ty","Global","GlobalType","create","create","get_value","mutability","set_value","ty","value_type","MemType","Memory","create","create","data_pointer","data_pointer_mut","get_data","grow","limit","set_data","size","ty","Instance","find_func","find_global","find_memory","find_table","func_len","func_names","global_len","global_names","mem_len","mem_names","name","table_len","table_names","Table","TableType","capacity","create","create","elem_ty","get_data","grow","limit","set_data","ty","Export","Import","Module","count_of_exports","count_of_imports","exports","function_type","function_type","global_type","global_type","imports","memory_type","memory_type","module_name","name","name","table_type","table_type","ty","ty","CompilerOptimizationLevel","CompilerOutputFormat","Const","ExternRef","ExternRef","ExternalType","F32","F64","FuncRef","FuncRef","Function","Global","HostRegistration","I32","I64","Memory","Mutability","Native","None","O0","O1","O2","O3","Os","Oz","RefType","Table","V128","ValType","Var","Wasi","Wasm","WasmEdgeProcess","WasmValue","as_raw","borrow","borrow_mut","clone","clone_into","eq","extern_ref","fmt","from","from","from_extern_ref","from_f32","from_f64","from_func_ref","from_i32","from_i64","from_null_ref","from_v128","func_ref","hash","into","is_null_ref","to_f32","to_f64","to_i32","to_i64","to_owned","to_v128","try_from","try_into","ty","type_id","vzip","full_version","log_debug_info","log_error_info","semv_version"],"q":["wasmedge_syswasmedge_sys::errorwasmedge_sys::error::CoreError","","","","","wasmedge_sys::error::ExportError","","","","","","wasmedge_sys::error::FuncError","wasmedge_sys::error::ImportError","","","","","","wasmedge_sys::error::InstanceError","","","","wasmedge_sys::error::StoreError","","","","","","","","","","","","","wasmedge_sys::error::VmError","","wasmedge_sys::error::WasmEdgeError","","","","","","","","","","","","","wasmedge_sys::instance","","","","","","","","","","","","","","wasmedge_sys::instance::function","","","","","","","","","","","wasmedge_sys::instance::global","","","","","","","","","wasmedge_sys::instance::memory","","","","","","","","","","","","wasmedge_sys::instance::module","","","","","","","","","","","","","","wasmedge_sys::instance::table","","","","","","","","","","","wasmedge_sys::module","","","","","","","","","","","","","","","","","","","","wasmedge_sys::types","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wasmedge_sys::utils","","",""],"d":["Struct of WasmEdge ahead-of-time(AOT) compiler.","Defines WasmEdge AOT compiler optimization level.","Defines WasmEdge AOT compiler output binary format.","Struct of WasmEdge Config.","Identifies an immutable global variable","Struct of WasmEdge Executor.","Struct of WasmEdge Export.","<code>ExternRef</code> denotes the infinite union of all references to …","A reference to object owned by the Vm.","Defines WasmEdge ExternType values.","32-bit floating-point data as defined by the IEEE 754-2019.","64-bit floating-point data as defined by the IEEE 754-2019.","<code>FuncRef</code> denotes the infinite union of all references to …","A reference to functions.","Struct of WasmEdge FuncType.","Struct of WasmEdge Function.","","Struct of WasmEdge Global.","","Struct of WasmEdge GlobalType.","Type alias for a host function.","32-bit integer.","64-bit integer.","Struct of WasmEdge Import.","Struct of WasmEdge ImportObject.","Struct of WasmEdge Instance.","Struct of WasmEdge Loader.","Struct of WasmEdge MemType.","Struct of WasmEdge Memory.","","Struct of WasmEdge Module.","Defines WasmEdge mutability values.","Native dynamic library format.","Unknown.","Disable as many optimizations as possible.","Optimize quickly without destroying debuggability.","Optimize for fast execution as much as possible without …","Optimize for fast execution as much as possible.","Optimize for small code size as much as possible without …","Optimize for small code size as much as possible.","Defines reference types.","Struct of WasmEdge Statistics.","Struct of Wasmedge Store.","Struct of WasmEdge Table.","","Struct of WasmEdge TableType","128-bit vector of packed integer or floating-point data.","Defines value types.","Struct of WasmEdge Validator.","Identifies a mutable global variable","Struct of WasmEdge Vm.","WebAssembly with AOT compiled codes in custom sections.","The WasmEdge result type.","Struct of WasmEdge Value.","Returns the active anonymous module instance.","Adds a host function into the host module.","Adds a global into the host module.","Adds a memory into the host module.","Adds a table into the host module.","Enables or disables the Annotations option.","Checks if the Annotations option turns on or not.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Enables or disables the BulkMemoryOperations option.","Checks if the BulkMemoryOperations option turns on or not.","","","","","","","","","","","","","","","The compiler compiles the input WASM from the given file …","Checks if the Store contains a function of which the name …","Checks if the store of the Vm contains a function of which …","Checks if the Store contains a registered module of which …","Checks if the Vm contains a registered module of which the …","Checks if the Store contains a registered function of …","Checks if the store of the Vm contains a registered …","Creates a new Config from an existed one.","Returns the total cost in execution.","Sets the instruction counting option.","Creates a new AOT compiler.","Creates a new Config.","Creates a new executor to be associated with the given …","Creates a new host module with the given name.","Create a new Loader to be associated with the given global …","Creates a new Statistics.","Creates a new Store.","Creates a new Validator to be associated with the given …","Creates a new Vm to be associated with the given …","Creates a WASI host module which contains the WASI host …","Creates a wasmedge_process host module that contains the …","","","","","","","","","","","","","","","","","","","","","Sets the dump IR option of AOT compiler.","Checks if the dump IR option turns on or not.","","","","","","","Defines the error types.","Enables or disables the ExceptionHandling option.","Checks if the ExceptionHandling option turns on or not.","Returns the WASI exit code.","Returns the exported function instance in the anonymous …","Returns the exported function instance in the registered …","Returns the exported global instance in the anonymous …","Returns the exported global instance in the registered …","Returns the exported memory instance in the anonymous …","Returns the exported memory instance in the registered …","Returns the exported table instance in the anonymous module","Returns the exported table instance in the registered …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Loads a WASM module from a buffer.","Loads a WASM module from a WASM file with the suffix <code>.wasm</code>.","Returns the length of the exported functions in the …","Returns the names of the exported functions in the …","Returns an iterator of the exported functions.","Returns the length of the exported function list.","Enables or disables the FunctionReferences option.","Checks if the FunctionReferences option turns on or not.","Sets the generic binary option of AOT compiler.","Checks if the generic binary option of AOT compiler turns …","Returns the output binary format of AOT compiler.","Returns the optimization level of AOT compiler.","Returns the function type of a WASM function by its name. …","Returns the number of the memory pages available.","Returns the function type of a WASM function by its name …","Returns the length of the exported globals in the …","Returns the names of the exported globals in the anonymous …","Initializes the WASI host module with the given parameters.","Initializes the wasmedge_process host module with the …","Defines WasmEdge instance structs, including Function, …","Instantiates a validated WASM module in the Vm.","Returns the instruction count in execution.","Returns the instruction count per second in execution.","Enables or Disables the <code>Interruptible</code> option of AOT …","Checks if the <code>Interruptible</code> option of AOT Compiler turns …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Checks if the cost measuring option turns on or not.","Checks if the instruction counting option turns on or not.","Checks if the time measuring option turns on or not.","Loads a WASM module from a WASM binary buffer.","Loads a WASM module from a WASM file.","Loads a WASM module from a WasmEdge AST Module.","Sets the cost measuring option.","Sets the time measuring option.","Returns the length of the exported memories in the …","Returns the names of all exported memories in the …","Enables or disables the Memory64 option.","Checks if the Memory64 option turns on or not.","Defines WasmEdge AST Module, Export, and Import structs.","Enables or disables the MultiValue option.","Checks if the MultiValue option turns on or not.","Enables or disables the ImportExportMutGlobals option.","Checks if the ImportExportMutGlobals option turns on or …","Returns the name of the ImportObject.","Returns the registered module instance by the module name.","Enables or disables the NonTrapFloatToIntConversions …","Checks if the NonTrapFloatToIntConversions option turns on …","Enables or disables the ReferenceTypes option.","Checks if the ReferenceTypes option turns on or not.","Returns the length of the exported functions in the …","Returns the names of the exported functions in the …","Returns the length of the exported globals in the …","Returns the names of all exported globals in the …","Returns the length of the exported memories in the …","Returns the names of all exported memories in the …","Returns the length of the registered modules.","Returns the names of all registered modules.","Returns the length of the exported tables in the …","Returns the names of the exported tables in the registered …","Registers and instantiates a WasmEdge module into a store …","Registers and instantiates a WasmEdge import object into a …","Registers and instantiates a WasmEdge module into a store.","Registers and instantiates a WASM module into the store of …","Registers and instantiates a WASM module into the store of …","Consumes a given WasmEdge ImportObject module to register …","Consumes a given WasmEdge AST Module to register and …","Resets the <code>Vm</code>.","Invokes a WASM function in the anonymous module, and …","Invokes a registered WASM function by its module name and …","Runs an exported WASM function by name. The WASM function …","Runs an exported WASM function by its name and the module…","Instantiate a WASM module from a buffer and invokes a …","Runs a function defined in a WASM file.","Instantiates a WASM module from a WasmEdge AST Module and …","Sets the output binary format of AOT compiler.","Sets the optimization level of AOT compiler.","Sets the cost limit in execution.","Sets the cost of instructions.","Sets the maximum number of the memory pages available.","Enables or disables the SignExtensionOperators option.","Checks if the SignExtensionOperators option turns on or …","Enables or disables the SIMD option.","Checks if the SIMD option turns on or not.","Returns the mutable Statistics from the Vm.","Returns the mutable Store from the Vm.","Returns the length of the exported tables in the anonymous …","Returns the names of the exported tables in the anonynous …","Enables or disables the TailCall option.","Checks if the TailCall option turns on or not.","Enables or disables the Threads option.","Checks if the Threads option turns on or not.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Defines the WebAssembly primitive types.","Defines the versioning and logging functions.","Validates a given WasmEdge Module.","Validates a WASM module loaded into the Vm.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Enables or disables host registration wasi.","Checks if host registration wasi turns on or not.","Returns the mutable Wasi ImportObject","Enables or disables host registration WasmEdge process.","Checks if host registration wasmedge process turns on or …","Returns the mutable WasmEdgeProcess ImportObject.","","","","","","","","Defines the common errors.","Defines the errors raised from WasmEdge Core.","Defines the errors raised in the execution phase.","Defines the errors raised in the instantiation phase.","Defines the errors raised in the load phase.","Defines the errors raised in the validation phase.","","","","","","","","","","","","","","","","","","","","Defines the errors raised from Export.","","","Defines the errors raised from Function.","","","","","","","Defines the errors raised from Global.","","","","","","","","","Defines the errors raised from Import.","","","","","","","Defines the errors raised from Instance.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Defines the errors raised from Memory.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Defines the errors raised from Store.","","Defines the errors raised from Table.","","","","","","","","","","","","","","","","","","","","","","","Defines the errors raised from Vm.","Defines the errors raised by the wasmedge-sys crate.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Struct of WasmEdge FuncType.","Struct of WasmEdge Function.","Struct of WasmEdge Global.","Struct of WasmEdge GlobalType.","Struct of WasmEdge Instance.","Struct of WasmEdge MemType.","Struct of WasmEdge Memory.","Struct of WasmEdge Table.","Struct of WasmEdge TableType","Defines WasmEdge Function and FuncType structs.","Defines WasmEdge Global and GlobalType structs.","Defines WasmEdge Memory and MemType structs.","Defines WasmEdge Instancestruct.","Defines WasmEdge Table and TableType structs.","Struct of WasmEdge FuncType.","Struct of WasmEdge Function.","Creates a host function.","Create a new FuncType to be associated with the given …","Returns the name of the module instance which hosts the …","Returns the name of the host function.","Returns the number of the arguments of a Function.","Returns an Iterator of the arguments of a Function.","Returns the number of the returns of a Function.","Returns an Iterator of the return types of a Function.","Returns the underlying wasm type of a Function.","Struct of WasmEdge Global.","Struct of WasmEdge GlobalType.","Create a new GlobalType to be associated with the given …","Creates a new Global instance to be associated with the …","Returns the value of the Global instance.","Returns the Mutability value of the GlobalType.","Sets the value of the Global instance.","Returns the underlying wasm type of a Global instance.","Returns the value type of the GlobalType.","Struct of WasmEdge MemType.","Struct of WasmEdge Memory.","Create a new Memory to be associated with the given …","Create a new MemType to be associated with the given limit …","Returns the const data pointer to the Memory.","Returns the data pointer to the Memory.","Copies the data from the Memory to the output buffer.","Grows this WebAssembly memory by <code>count</code> pages.","Returns the limit range of a MemType.","Copies the data from the given input buffer into the Memory…","Returns the size, in WebAssembly pages (64 KiB of each …","Returns the type of the Memory.","Struct of WasmEdge Instance.","Returns the exported function instance in the this module …","Returns the exported global instance in the module instance","Returns the exported memory instance in the module instance","Returns the exported table instance in this module instance","Returns the length of the exported functions in this …","Returns the names of the exported functions in this module.","Returns the length of the exported globals in this module.","Returns the names of the exported globals in this module.","Returns the length of the exported memories in this module.","Returns the names of all exported memories in this module.","Returns the name of this exported module instance.","Returns the length of the exported tables in this module.","Returns the names of the exported tables in this module.","Struct of WasmEdge Table.","Struct of WasmEdge TableType","Returns the capacity of the Table.","Creates a new Table to be associated with the given …","Creates a new TableType to be associated with the given …","Returns the element type.","Returns the element value at a specific position in the …","Increases the capacity of the Table.","Returns a range of the limit size of a Table.","Sets a new element value at a specific position in the …","Returns the TableType of the Table.","Struct of WasmEdge Export.","Struct of WasmEdge Import.","Struct of WasmEdge Module.","Returns the count of the exports of the Module.","Returns the number of the imports of the Module.","Returns the exports of the Module.","Returns the type of the imported function.","Returns the function type.","Returns the global type.","Returns the global type.","Returns the imports of the Module.","Returns the memory type.","Returns the memory type.","Returns the module name from the Import.","Returns the external name of the Import.","Returns the external name of the Export.","Returns the table type.","Returns the table type.","Returns the external type of the Import.","Returns the external type of the Export.","Defines WasmEdge AOT compiler optimization level.","Defines WasmEdge AOT compiler output binary format.","Identifies an immutable global variable","<code>ExternRef</code> denotes the infinite union of all references to …","A reference to object owned by the Vm.","Defines WasmEdge ExternType values.","32-bit floating-point data as defined by the IEEE 754-2019.","64-bit floating-point data as defined by the IEEE 754-2019.","<code>FuncRef</code> denotes the infinite union of all references to …","A reference to functions.","","","Defines WasmEdge host module registration enum.","32-bit integer.","64-bit integer.","","Defines WasmEdge mutability values.","Native dynamic library format.","Unknown.","Disable as many optimizations as possible.","Optimize quickly without destroying debuggability.","Optimize for fast execution as much as possible without …","Optimize for fast execution as much as possible.","Optimize for small code size as much as possible without …","Optimize for small code size as much as possible.","Defines reference types.","","128-bit vector of packed integer or floating-point data.","Defines value types.","Identifies a mutable global variable","","WebAssembly with AOT compiled codes in custom sections.","","Struct of WasmEdge Value.","Returns the raw <code>WasmEdge_Value</code>.","","","","","","Returns the reference to an external object.","","","Returns the argument unchanged.","Creates a WasmValue from a reference to an external object.","Creates a WasmValue from a <code>f32</code> value.","Creates a WasmValue from a <code>f64</code> value.","Creates a WasmValue from a the function reference.","Creates a WasmValue from a <code>i32</code> value.","Creates a WasmValue from a <code>i64</code> value.","Creates a WasmValue from a RefType value.","Creates a WasmValue from a <code>i128</code> value.","Returns the function index.","","Calls <code>U::from(self)</code>.","Checks if a WasmValue is NullRef or not.","Generates a <code>f32</code> value from a WasmValue.","Generates a <code>f64</code> value from a WasmValue.","Generates a <code>i32</code> value from a WasmValue.","Generates a <code>i64</code> value from a WasmValue.","","Generates a <code>v128</code> value from a WasmValue.","","","Returns the type of a WasmValue.","","","Full version.","Logs the debug information.","Logs the error information.","Semantic Version."],"i":[0,0,0,0,1,0,0,2,3,0,3,3,2,3,0,0,4,0,4,0,0,3,3,0,0,0,0,0,0,4,0,0,5,3,6,6,6,6,6,6,0,0,0,0,4,0,3,0,0,1,0,5,0,0,7,8,8,8,8,9,9,10,9,11,8,12,13,14,15,16,17,18,19,20,21,22,23,24,25,7,2,3,1,6,5,4,26,27,28,10,9,11,8,12,13,14,15,16,17,18,19,20,21,22,23,24,25,7,2,3,1,6,5,4,26,27,28,9,9,2,3,1,6,5,4,26,2,3,1,6,5,4,26,10,7,28,7,28,7,28,9,25,9,10,9,11,8,21,25,7,27,28,8,8,10,9,11,8,12,13,14,15,16,17,19,20,21,22,23,24,25,7,27,28,9,9,2,3,1,6,5,4,0,9,9,8,7,7,7,7,7,7,7,7,10,9,11,8,12,13,14,15,16,17,18,19,20,21,22,23,24,25,7,2,3,1,6,5,4,4,26,27,28,10,9,11,8,12,13,14,15,16,17,18,19,20,21,22,23,24,25,7,2,2,3,3,1,1,6,6,5,5,4,4,26,27,28,21,21,7,7,28,28,9,9,9,9,9,9,28,9,28,7,7,8,8,0,28,25,25,9,9,10,9,11,8,12,13,14,15,16,17,18,19,20,21,22,23,24,25,7,2,3,1,6,5,4,26,27,28,9,9,9,28,28,28,9,9,7,7,9,9,0,9,9,9,9,8,7,9,9,9,9,7,7,7,7,7,7,7,7,7,7,11,11,11,28,28,28,28,28,11,11,28,28,28,28,28,9,9,25,25,9,9,9,9,9,28,28,7,7,9,9,9,9,2,3,1,6,5,4,26,4,10,9,11,8,12,13,14,15,16,17,18,19,20,21,22,23,24,25,7,2,3,1,6,5,4,26,27,28,10,9,11,8,12,13,14,15,16,17,18,19,20,21,22,23,24,25,7,2,3,1,6,5,4,26,27,28,10,9,11,8,12,13,14,15,16,17,18,19,20,21,22,23,24,25,7,2,3,1,6,5,4,26,27,28,0,0,27,28,10,9,11,8,12,13,14,15,16,17,18,19,20,21,22,23,24,25,7,2,3,1,6,5,4,26,27,28,9,9,28,9,9,28,29,30,31,31,32,33,31,0,0,0,0,0,0,29,34,33,35,36,37,38,34,39,40,41,32,38,40,30,41,31,39,31,0,31,31,0,29,42,43,31,41,31,0,42,43,31,39,39,39,32,31,0,31,39,39,40,41,31,0,30,41,41,39,39,29,32,41,32,32,32,32,32,32,32,32,32,32,32,39,32,32,32,32,39,30,31,39,39,39,39,39,39,39,39,39,31,0,42,43,31,41,35,31,40,32,32,33,39,37,38,44,37,37,38,44,37,37,38,38,44,37,37,37,31,38,38,44,37,37,38,38,38,33,39,41,29,39,31,31,0,31,0,41,42,43,31,39,34,33,35,36,42,43,32,41,39,41,40,35,41,31,30,31,31,0,0,41,41,29,31,34,33,35,36,42,43,44,37,38,30,29,39,32,40,41,31,34,33,35,36,42,43,44,37,38,30,29,39,32,40,41,31,34,33,35,36,42,43,44,37,38,30,29,39,32,40,41,31,34,33,35,36,42,43,44,37,38,30,29,39,32,40,41,31,34,33,35,36,42,43,44,37,38,30,29,39,32,40,41,31,31,34,34,33,33,35,35,36,36,42,42,43,43,44,44,37,37,38,38,30,30,29,29,39,39,32,32,40,40,41,41,31,31,31,31,34,33,35,36,42,43,44,37,38,30,29,39,32,40,41,31,34,33,35,36,42,43,44,37,38,30,29,39,32,40,41,31,34,42,43,44,37,38,30,31,31,34,33,35,36,42,43,44,37,38,30,29,39,32,40,41,31,34,33,35,36,42,43,44,37,38,30,29,39,32,40,41,31,34,33,35,36,42,43,44,37,38,30,29,39,32,40,41,31,34,33,35,36,42,43,44,37,38,30,29,39,32,40,41,31,34,33,35,36,42,43,44,37,38,30,29,39,32,40,41,31,34,33,35,36,42,43,44,37,38,30,29,39,32,40,41,45,46,47,48,49,50,51,52,53,54,54,55,56,57,58,59,60,60,61,62,63,64,65,66,67,68,69,70,71,72,70,73,72,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,13,12,12,13,13,13,13,12,0,0,14,15,15,14,15,15,14,0,0,16,17,16,16,16,16,17,16,16,16,0,18,18,18,18,18,18,18,18,18,18,18,18,18,0,0,19,19,20,20,19,19,20,19,19,0,0,0,22,22,22,23,24,23,24,22,23,24,23,23,24,23,24,23,24,0,0,1,2,3,0,3,3,2,3,4,4,0,3,3,4,0,5,3,6,6,6,6,6,6,0,4,3,0,1,89,5,89,0,26,89,89,89,89,89,26,89,89,89,26,26,26,26,26,26,26,26,26,89,89,26,26,26,26,26,89,26,89,89,26,89,89,0,0,0,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["wasmedgeresult",6,[["instance",3]]]],[[["",0],["function",3]]],[[["",0],["global",3]]],[[["",0],["memory",3]]],[[["",0],["table",3]]],[[["",0],["bool",0]]],[[["",0]],["bool",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0],["bool",0]]],[[["",0]],["bool",0]],[[["",0]],["reftype",4]],[[["",0]],["valtype",4]],[[["",0]],["mutability",4]],[[["",0]],["compileroptimizationlevel",4]],[[["",0]],["compileroutputformat",4]],[[["",0]],["externaltype",4]],[[["",0]],["wasmvalue",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0]],["wasmedgeresult",6]],[[["",0]],["wasmedgeresult",6]],[[["",0]],["wasmedgeresult",6]],[[["",0]],["wasmedgeresult",6]],[[["",0]],["wasmedgeresult",6]],[[["",0]],["wasmedgeresult",6]],[[["",0]],["wasmedgeresult",6]],[[["config",3]],["wasmedgeresult",6]],[[["",0]],["u64",0]],[[["",0],["bool",0]]],[[["option",4,[["config",3]]]],["wasmedgeresult",6]],[[],["wasmedgeresult",6]],[[["option",4,[["config",3]]],["option",4,[["statistics",3]]]],["wasmedgeresult",6]],[[],["wasmedgeresult",6]],[[["option",4,[["config",3]]]],["wasmedgeresult",6]],[[],["wasmedgeresult",6]],[[],["wasmedgeresult",6]],[[["option",4,[["config",3]]]],["wasmedgeresult",6]],[[["option",4,[["config",3]]],["option",4,[["store",3]]]],["wasmedgeresult",6]],[[["option",4,[["vec",3,[["str",0]]]]],["option",4,[["vec",3,[["str",0]]]]],["option",4,[["vec",3,[["str",0]]]]]],["wasmedgeresult",6]],[[["option",4,[["vec",3,[["str",0]]]]],["bool",0]],["wasmedgeresult",6]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0],["bool",0]]],[[["",0]],["bool",0]],[[["",0],["reftype",4]],["bool",0]],[[["",0],["valtype",4]],["bool",0]],[[["",0],["mutability",4]],["bool",0]],[[["",0],["compileroptimizationlevel",4]],["bool",0]],[[["",0],["compileroutputformat",4]],["bool",0]],[[["",0],["externaltype",4]],["bool",0]],null,[[["",0],["bool",0]]],[[["",0]],["bool",0]],[[["",0]],["u32",0]],[[["",0]],["wasmedgeresult",6,[["function",3]]]],[[["",0]],["wasmedgeresult",6,[["function",3]]]],[[["",0]],["wasmedgeresult",6,[["global",3]]]],[[["",0]],["wasmedgeresult",6,[["global",3]]]],[[["",0]],["wasmedgeresult",6,[["memory",3]]]],[[["",0]],["wasmedgeresult",6,[["memory",3]]]],[[["",0]],["wasmedgeresult",6,[["table",3]]]],[[["",0]],["wasmedgeresult",6,[["table",3]]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u32",0]]],[[]],[[["wasmedge_valtype",6]]],[[["wasmedge_mutability",6]]],[[]],[[["u32",0]],["compileroptimizationlevel",4]],[[]],[[]],[[["u32",0]],["compileroutputformat",4]],[[]],[[["u32",0]]],[[]],[[]],[[]],[[["",0]],["wasmedgeresult",6,[["module",3]]]],[[["",0]],["wasmedgeresult",6,[["module",3]]]],[[["",0]],["u32",0]],[[["",0]],["option",4,[["vec",3,[["string",3]]]]]],[[["",0]]],[[["",0]],["usize",0]],[[["",0],["bool",0]]],[[["",0]],["bool",0]],[[["",0],["bool",0]]],[[["",0]],["bool",0]],[[["",0]],["compileroutputformat",4]],[[["",0]],["compileroptimizationlevel",4]],[[["",0]],["wasmedgeresult",6,[["functype",3]]]],[[["",0]],["u32",0]],[[["",0]],["wasmedgeresult",6,[["functype",3]]]],[[["",0]],["u32",0]],[[["",0]],["option",4,[["vec",3,[["string",3]]]]]],[[["",0],["option",4,[["vec",3,[["str",0]]]]],["option",4,[["vec",3,[["str",0]]]]],["option",4,[["vec",3,[["str",0]]]]]]],[[["",0],["option",4,[["vec",3,[["str",0]]]]],["bool",0]]],null,[[["",0]],["wasmedgeresult",6]],[[["",0]],["u64",0]],[[["",0]],["f64",0]],[[["",0],["bool",0]]],[[["",0]],["bool",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["wasmedgeresult",6]],[[["",0]],["wasmedgeresult",6]],[[["",0],["module",3]],["wasmedgeresult",6]],[[["",0],["bool",0]]],[[["",0],["bool",0]]],[[["",0]],["u32",0]],[[["",0]],["option",4,[["vec",3,[["string",3]]]]]],[[["",0],["bool",0]]],[[["",0]],["bool",0]],null,[[["",0],["bool",0]]],[[["",0]],["bool",0]],[[["",0],["bool",0]]],[[["",0]],["bool",0]],[[["",0]],["string",3]],[[["",0]],["wasmedgeresult",6,[["instance",3]]]],[[["",0],["bool",0]]],[[["",0]],["bool",0]],[[["",0],["bool",0]]],[[["",0]],["bool",0]],[[["",0]],["u32",0]],[[["",0]],["option",4,[["vec",3,[["string",3]]]]]],[[["",0]],["u32",0]],[[["",0]],["option",4,[["vec",3,[["string",3]]]]]],[[["",0]],["u32",0]],[[["",0]],["option",4,[["vec",3,[["string",3]]]]]],[[["",0]],["u32",0]],[[["",0]],["option",4,[["vec",3,[["string",3]]]]]],[[["",0]],["u32",0]],[[["",0]],["option",4,[["vec",3,[["string",3]]]]]],[[["",0],["store",3],["module",3]],["wasmedgeresult",6]],[[["",0],["store",3],["importobject",3]],["wasmedgeresult",6]],[[["",0],["store",3],["module",3]],["wasmedgeresult",6]],[[["",0]],["wasmedgeresult",6]],[[["",0]],["wasmedgeresult",6]],[[["",0],["importobject",3]],["wasmedgeresult",6]],[[["",0],["module",3]],["wasmedgeresult",6]],[[["",0]]],[[["",0],["store",3]],["wasmedgeresult",6,[["vec",3,[["wasmvalue",3]]]]]],[[["",0],["store",3]],["wasmedgeresult",6,[["vec",3,[["wasmvalue",3]]]]]],[[["",0]],["wasmedgeresult",6,[["vec",3,[["wasmvalue",3]]]]]],[[["",0]],["wasmedgeresult",6,[["vec",3,[["wasmvalue",3]]]]]],[[["",0]],["wasmedgeresult",6,[["vec",3,[["wasmvalue",3]]]]]],[[["",0]],["wasmedgeresult",6,[["vec",3,[["wasmvalue",3]]]]]],[[["",0],["module",3]],["wasmedgeresult",6,[["vec",3,[["wasmvalue",3]]]]]],[[["",0],["compileroutputformat",4]]],[[["",0],["compileroptimizationlevel",4]]],[[["",0],["u64",0]]],[[["",0]]],[[["",0],["u32",0]]],[[["",0],["bool",0]]],[[["",0]],["bool",0]],[[["",0],["bool",0]]],[[["",0]],["bool",0]],[[["",0]],["wasmedgeresult",6,[["statistics",3]]]],[[["",0]],["wasmedgeresult",6,[["store",3]]]],[[["",0]],["u32",0]],[[["",0]],["option",4,[["vec",3,[["string",3]]]]]],[[["",0],["bool",0]]],[[["",0]],["bool",0]],[[["",0],["bool",0]]],[[["",0]],["bool",0]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,[[["",0],["module",3]],["wasmedgeresult",6]],[[["",0]],["wasmedgeresult",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0],["bool",0]]],[[["",0]],["bool",0]],[[["",0]],["wasmedgeresult",6,[["importobject",3]]]],[[["",0],["bool",0]]],[[["",0]],["bool",0]],[[["",0]],["wasmedgeresult",6,[["importobject",3]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,nullwasmedgeerror",4]],[[["",0]],["funcerror",4]],[[["",0]],["memerror",4]],[[["",0]],["globalerror",4]],[[["",0]],["tableerror",4]],[[["",0]],["importerror",4]],[[["",0]],["exporterror",4]],[[["",0]],["instanceerror",4]],[[["",0]],["storeerror",4]],[[["",0]],["vmerror",4]],[[["",0]],["coreerror",4]],[[["",0]],["corecommonerror",4]],[[["",0]],["coreloaderror",4]],[[["",0]],["corevalidationerror",4]],[[["",0]],["coreinstantiationerror",4]],[[["",0]],["coreexecutionerror",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["wasmedgeerror",4]],["bool",0]],[[["",0],["funcerror",4]],["bool",0]],[[["",0],["memerror",4]],["bool",0]],[[["",0],["globalerror",4]],["bool",0]],[[["",0],["tableerror",4]],["bool",0]],[[["",0],["importerror",4]],["bool",0]],[[["",0],["exporterror",4]],["bool",0]],[[["",0],["instanceerror",4]],["bool",0]],[[["",0],["storeerror",4]],["bool",0]],[[["",0],["vmerror",4]],["bool",0]],[[["",0],["coreerror",4]],["bool",0]],[[["",0],["corecommonerror",4]],["bool",0]],[[["",0],["coreloaderror",4]],["bool",0]],[[["",0],["corevalidationerror",4]],["bool",0]],[[["",0],["coreinstantiationerror",4]],["bool",0]],[[["",0],["coreexecutionerror",4]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["nulerror",3]]],[[["frombyteswithnulerror",3]]],[[]],[[["utf8error",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0],["wasmedgeerror",4]],["bool",0]],[[["",0],["funcerror",4]],["bool",0]],[[["",0],["importerror",4]],["bool",0]],[[["",0],["exporterror",4]],["bool",0]],[[["",0],["instanceerror",4]],["bool",0]],[[["",0],["storeerror",4]],["bool",0]],[[["",0],["vmerror",4]],["bool",0]],[[["",0],["coreerror",4]],["bool",0]],[[["",0]],["option",4,[["error",8]]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["functype",3],["hostfunc",6],["u64",0]],["wasmedgeresult",6]],[[["intoiterator",8],["intoiterator",8]],["wasmedgeresult",6]],[[["",0]],["option",4,[["str",0]]]],[[["",0]],["option",4,[["str",0]]]],[[["",0]],["usize",0]],[[["",0]]],[[["",0]],["usize",0]],[[["",0]]],[[["",0]],["wasmedgeresult",6,[["functype",3]]]],null,null,[[["valtype",4],["mutability",4]],["wasmedgeresult",6]],[[["globaltype",3],["wasmvalue",3]],["wasmedgeresult",6]],[[["",0]],["wasmvalue",3]],[[["",0]],["mutability",4]],[[["",0],["wasmvalue",3]],["wasmedgeresult",6]],[[["",0]],["wasmedgeresult",6,[["globaltype",3]]]],[[["",0]],["valtype",4]],null,null,[[["memtype",3]],["wasmedgeresult",6]],[[["rangeinclusive",3,[["u32",0]]]],["wasmedgeresult",6]],[[["",0],["u32",0],["u32",0]],["wasmedgeresult",6,[["u8",0]]]],[[["",0],["u32",0],["u32",0]],["wasmedgeresult",6,[["u8",0]]]],[[["",0],["u32",0],["u32",0]],["wasmedgeresult",6,[["vec",3,[["u8",0]]]]]],[[["",0],["u32",0]],["wasmedgeresult",6]],[[["",0]],["rangeinclusive",3,[["u32",0]]]],[[["",0],["u32",0]],["wasmedgeresult",6]],[[["",0]],["u32",0]],[[["",0]],["wasmedgeresult",6,[["memtype",3]]]],null,[[["",0]],["wasmedgeresult",6,[["function",3]]]],[[["",0]],["wasmedgeresult",6,[["global",3]]]],[[["",0]],["wasmedgeresult",6,[["memory",3]]]],[[["",0]],["wasmedgeresult",6,[["table",3]]]],[[["",0]],["u32",0]],[[["",0]],["option",4,[["vec",3,[["string",3]]]]]],[[["",0]],["u32",0]],[[["",0]],["option",4,[["vec",3,[["string",3]]]]]],[[["",0]],["u32",0]],[[["",0]],["option",4,[["vec",3,[["string",3]]]]]],[[["",0]],["option",4,[["string",3]]]],[[["",0]],["u32",0]],[[["",0]],["option",4,[["vec",3,[["string",3]]]]]],null,null,[[["",0]],["usize",0]],[[["tabletype",3]],["wasmedgeresult",6]],[[["reftype",4],["rangeinclusive",3,[["u32",0]]]],["wasmedgeresult",6]],[[["",0]],["reftype",4]],[[["",0],["u32",0]],["wasmedgeresult",6,[["wasmvalue",3]]]],[[["",0],["u32",0]],["wasmedgeresult",6]],[[["",0]],["rangeinclusive",3,[["u32",0]]]],[[["",0],["wasmvalue",3],["u32",0]],["wasmedgeresult",6]],[[["",0]],["wasmedgeresult",6,[["tabletype",3]]]],null,null,null,[[["",0]],["u32",0]],[[["",0]],["u32",0]],[[["",0]],["vec",3,[["export",3]]]],[[["",0]],["wasmedgeresult",6,[["functype",3]]]],[[["",0]],["wasmedgeresult",6,[["functype",3]]]],[[["",0]],["wasmedgeresult",6,[["globaltype",3]]]],[[["",0]],["wasmedgeresult",6,[["globaltype",3]]]],[[["",0]],["vec",3,[["import",3]]]],[[["",0]],["wasmedgeresult",6,[["memtype",3]]]],[[["",0]],["wasmedgeresult",6,[["memtype",3]]]],[[["",0]],["cow",4,[["str",0]]]],[[["",0]],["cow",4,[["str",0]]]],[[["",0]],["cow",4,[["str",0]]]],[[["",0]],["wasmedgeresult",6,[["tabletype",3]]]],[[["",0]],["wasmedgeresult",6,[["tabletype",3]]]],[[["",0]],["externaltype",4]],[[["",0]],["externaltype",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["wasmedge_value",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["hostregistration",4]],[[["",0],["",0]]],[[["",0],["hostregistration",4]],["bool",0]],[[["",0]],["option",4]],[[["",0],["formatter",3]],["result",6]],[[["u32",0]]],[[]],[[["",0]]],[[["f32",0]]],[[["f64",0]]],[[["function",3]]],[[["i32",0]]],[[["i64",0]]],[[["reftype",4]]],[[["i128",0]]],[[["",0]],["option",4,[["function",3]]]],[[["",0],["",0]]],[[]],[[["",0]],["bool",0]],[[["",0]],["f32",0]],[[["",0]],["f64",0]],[[["",0]],["i32",0]],[[["",0]],["i64",0]],[[["",0]]],[[["",0]],["i128",0]],[[],["result",4]],[[],["result",4]],[[["",0]],["valtype",4]],[[["",0]],["typeid",3]],[[]],[[],["wasmedgeresult",6,[["str",0]]]],[[]],[[]],[[],["string",3]]],"p":[[4,"Mutability"],[4,"RefType"],[4,"ValType"],[4,"ExternalType"],[4,"CompilerOutputFormat"],[4,"CompilerOptimizationLevel"],[3,"Store"],[3,"ImportObject"],[3,"Config"],[3,"Compiler"],[3,"Executor"],[3,"Function"],[3,"FuncType"],[3,"GlobalType"],[3,"Global"],[3,"Memory"],[3,"MemType"],[3,"Instance"],[3,"Table"],[3,"TableType"],[3,"Loader"],[3,"Module"],[3,"Import"],[3,"Export"],[3,"Statistics"],[3,"WasmValue"],[3,"Validator"],[3,"Vm"],[4,"CoreCommonError"],[4,"CoreError"],[4,"WasmEdgeError"],[4,"CoreValidationError"],[4,"MemError"],[4,"FuncError"],[4,"GlobalError"],[4,"TableError"],[4,"StoreError"],[4,"VmError"],[4,"CoreLoadError"],[4,"CoreInstantiationError"],[4,"CoreExecutionError"],[4,"ImportError"],[4,"ExportError"],[4,"InstanceError"],[13,"Common"],[13,"Load"],[13,"Validation"],[13,"Instantiation"],[13,"Execution"],[13,"FuncType"],[13,"TableType"],[13,"MemType"],[13,"GlobalType"],[13,"Type"],[13,"CreateBinding"],[13,"FuncType"],[13,"TableType"],[13,"MemType"],[13,"GlobalType"],[13,"Type"],[13,"NotFoundFunc"],[13,"NotFoundTable"],[13,"NotFoundMem"],[13,"NotFoundGlobal"],[13,"NotFoundFunc"],[13,"NotFoundTable"],[13,"NotFoundMem"],[13,"NotFoundGlobal"],[13,"NotFoundModule"],[13,"NotFoundFuncRegistered"],[13,"NotFoundGlobalRegistered"],[13,"NotFoundMemRegistered"],[13,"NotFoundTableRegistered"],[13,"NotFoundFuncType"],[13,"NotFoundImportObject"],[13,"Core"],[13,"Store"],[13,"Vm"],[13,"Func"],[13,"Mem"],[13,"Global"],[13,"Table"],[13,"Import"],[13,"Export"],[13,"Instance"],[13,"FoundNulByte"],[13,"NotFoundNulByte"],[13,"Utf8"],[4,"HostRegistration"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};